# (c) 2016 DataNexus Inc.  All Rights Reserved.
# Licensed software not for distribution
#
#
---
- import_tasks: tune.yml
- import_tasks: interface-facts.yml

- set_fact: 
    rest_path: "{{ (got_root | default('yes')) | ternary('/usr/bin', (confluent_root + '/confluent-' + confluent.packages.confluent_version + '.' + confluent.packages.minor_release.split('-')[0] + '/bin')) }}"
    
- block:
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | configuring kafka rest proxy group id
    lineinfile:
      path: "{{ kafkarest.config_file }}"
      regexp: '^id='
      line: "id={{ kafkarest.config.group_id }}"
      insertafter: '^#id='
    notify: restart kafkarest
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | configuring schema registry hosts
    lineinfile:
      path: "{{ kafkarest.config_file }}"
      regexp: '^schema.registry.url='
      line: "schema.registry.url=http://{{ groups['registry'] | join(':' + schema.registry.config.schema_registry_listener_port + ',http://') }}:{{ schema.registry.config.schema_registry_listener_port }}"
      insertafter: '^#schema.registry.url='
    when:
      - groups['registry'] is defined
      - groups['registry'] | length > 0
    notify: restart kafkarest
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | configuring zookeeper hosts
    lineinfile:
      path: "{{ kafkarest.config_file }}"
      regexp: '^zookeeper.connect='
      line: "zookeeper.connect={{ groups['zookeeper_private'] | join(':' + zookeeper.config.port + ',') }}:{{ zookeeper.config.port }}"
      insertafter: '^#zookeeper.connect='
    notify: restart kafkarest
  
  # cap number of brokers in config at 5
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | configuring kafka brokers
    lineinfile:
      path: "{{ kafkarest.config_file }}"
      regexp: '^bootstrap.servers='
      line: "bootstrap.servers=PLAINTEXT://{{ groups['kafka_public'][:5] | join(':' + kafka.config.broker_port + ',PLAINTEXT://') }}:{{ kafka.config.broker_port }}"
    notify: restart kafkarest
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | configuring {{ kafkarest.service_name }} listener
    lineinfile:
      path: "{{ kafkarest.config_file }}"
      regexp: '^listeners='
      line: "listeners=http://{{ kafka_interface_ipv4 }}:{{ kafkarest.config.rest_port }}"
      insertafter: '^bootstrap.servers='
    notify: restart kafkarest
  
  # this is a little odd because we either need to be root or the kafkarest.user
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | ensuring {{ (got_root | default('yes')) | ternary('/var/run', (confluent_root + '/var/run')) }} exists
    file:
      path: "{{ (got_root | default('yes')) | ternary('/var/run', (confluent_root + '/var/run')) }}"
      owner: "{{ (got_root | default('yes')) | ternary('root', kafkarest.user) }}"
      group: "{{ (got_root | default('yes')) | ternary('root', kafkarest.group) }}"
      state: directory
      mode: 0755
      
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | ensuring {{ kafkarest.environment.LOG_DIR }} exists
    file:
      path: "{{ kafkarest.environment.LOG_DIR }}"
      owner: "{{ kafkarest.user }}"
      group: "{{ kafkarest.group }}"
      state: directory
      mode: 0755
    when: kafkarest.environment.LOG_DIR is defined
    
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | ensuring {{ kafkarest.user_service }} exists
    file:
      path: "{{ kafkarest.user_service }}"
      owner: "{{ kafkarest.user }}"
      group: "{{ kafkarest.group }}"
      state: directory
      mode: 0755
      
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | installing {{ kafkarest.service_name }} into {{ kafkarest.user_service }}
    template:
      src: confluent.restproxy.j2
      dest: "{{ kafkarest.user_service }}/confluent-kafka-rest"
      mode: 0755
      owner: "{{ kafkarest.user }}"
      group: "{{ kafkarest.group }}"
    
  # the thinking here is that these files are either restricted or not and that drives our escalation  
  become: "{{ got_root | default('yes') }}"
    
- block:
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | creating systemd override directory
    file:
      path: "{{ kafkarest.systemd_override }}"
      owner: "{{ kafkarest.user }}"
      group: "{{ kafkarest.group }}"
      state: directory
      mode: 0750
    when: 
      - ansible_distribution_version is version_compare('7', '>=')
 
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | installing {{ kafkarest.service_name }} environment overrride
    template:
      src: environment.j2
      dest: "{{ kafkarest.systemd_override }}/override.conf"
      mode: 0640
      owner: "{{ kafkarest.user }}"
      group: "{{ kafkarest.group }}"
    notify:
      - reload systemd
      - restart kafkarest
    when: 
      - ansible_distribution_version is version_compare('7', '>=')
      
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | enabling {{ kafkarest.service_name }} by systemd
    systemd:
      name: "{{ kafkarest.service_name }}"
      enabled: yes
    when: 
      - ansible_distribution_version is version_compare('7', '>=')
  
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | installing sysvinit {{ kafkarest.service_name }} script
    template:
      src: confluent.sysvinit.j2
      dest: "/etc/init.d/{{ kafkarest.service_name }}"
      mode: 0755
      owner: root
      group: root
    when: 
      - ansible_distribution_version is version_compare('7', '<')
      
  # the restart handler should take care of starting the service
  - name: CONFLUENT OVERLAY (KAFKA REST PROXY) | enabling {{ kafkarest.service_name }} by sysvinit
    sysvinit:
      name: "{{ kafkarest.service_name }}"
      enabled: yes
    when:
      - ansible_distribution_version is version_compare('7', '<')
      
  become: yes
  when:
    - got_root | default('yes') 
    - ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
  