# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# apply AWS kafka registry security group rules for multi-interface systems
---
- name: CONFLUENT OVERLAY | discovering schema registry instances
  ec2_instance_facts:
    region: "{{ region }}"
    filters:
      instance-state-name: running
      "tag:Tenant": "{{ tenant }}"
      "tag:Project": "{{ project }}"
      "tag:Domain": "{{ domain }}" 
      "tag:Application": 'registry'
      "tag:Cluster": "{{ cluster | default ('a') }}"
      "tag:Dataflow": "{{ dataflow | default ('none') }}"
  register: all_registry_nodes
  when: cloud == 'aws'

- block:
  
  - set_fact:
      registry_interfaces: "{{ all_registry_nodes.instances | map(attribute='network_interfaces') | list }}"

  # apply confluent rule and the internal SSH rule 
  - name: CONFLUENT OVERLAY | applying kafka registry internal security rules to interface 0
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ item.network_interface_id }}"
      security_groups:
        - "{{ sg_ssh_private.security_groups.0.group_id }}"
    with_items: "{{ registry_interfaces }}"
    when: item.attachment.device_index == 0
  
  # apply confluent external registry rule
  - name: CONFLUENT OVERLAY | applying kafka registry external security rules to interface 1
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ item.network_interface_id }}"
      security_groups:
        - "{{ sg_registry_external.group_id }}"
    with_items: "{{ registry_interfaces }}"
    when: item.attachment.device_index == 1
  
  when: "'registry' in groups | default([])"
