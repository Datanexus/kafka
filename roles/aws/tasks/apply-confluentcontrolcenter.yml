# (c) 2016 DataNexus Inc.  All Rights Reserved.
#
# apply AWS confluent control center security group rules for multi-interface systems
---
- name: CONFLUENT OVERLAY | discovering controlcenter instances
  ec2_instance_facts:
    region: "{{ region }}"
    filters:
      instance-state-name: running
      "tag:Tenant": "{{ tenant }}"
      "tag:Project": "{{ project }}"
      "tag:Domain": "{{ domain }}" 
      "tag:Application": 'controlcenter'
      "tag:Cluster": "{{ cluster | default ('a') }}"
      "tag:Dataflow": "{{ dataflow | default ('none') }}"
  register: all_control_nodes
  when: cloud == 'aws'

- block:
  
  # construct list of all interfaces attached to confluent nodes
  - set_fact:
      control_interfaces: "{{ all_control_nodes.instances | map(attribute='network_interfaces') | list }}"

  - name: CONFLUENT OVERLAY | applying ssh internal security rules to interface 0
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ item.network_interface_id }}"
      security_groups:
        - "{{ sg_ssh_private.security_groups.0.group_id }}"
    with_items: "{{ kafka_interfaces }}"
    when: item.attachment.device_index == 0
  
  # apply confluent rule and the internal SSH rule 
  - name: CONFLUENT OVERLAY | applying kafka broker and control center external security rules to interface 1
    ec2_eni:
      region: "{{ region }}"
      eni_id: "{{ item.network_interface_id }}"
      security_groups:
        - "{{ sg_kafka_external.group_id }}"
        - "{{ sg_controlcenter_external.group_id }}"
    with_items: "{{ control_interfaces }}"
    when: item.attachment.device_index == 1
  
  when: "'controlcenter' in groups | default([])"
