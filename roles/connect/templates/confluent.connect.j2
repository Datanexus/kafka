#!//bin/bash
# (c) 2016 DataNexus Inc.  All Rights Reserved.
# Licensed software not for distribution

if [ $# -eq 0 ] || [ "$1" = "-h" ] ; then
	printf "Usage:\\tkafka-connect [-h]\\thelp\\n"
	printf "Usage:\\t[ sudo -H -u {{ connect_user }} ] {{ connect.distributed.user_service }}/kafka-connect [ start | stop | restart | status]\\n"
	exit 0
fi

# source function library
. /etc/init.d/functions

# which jcmd to use
if [ -z "$JAVA_HOME" ]; then
  JCMD="jcmd"
else
  JCMD="$JAVA_HOME/bin/jcmd"
fi

PID_FILE={{ (got_root | default('yes')) | ternary('/var/run/' + connect_service_name + '.pid', (confluent_root + '/var/run/' + connect_service_name + '.pid')) }}

start() {
  if [ -x `which logger` ]; then
    logger -s -t {{ connect_service_name }} 'starting service...' &>> {{ connect.distributed.environment.LOG_DIR }}/connect.log
  fi
  {% for key, value in connect.distributed.environment.items() -%}
  {{ " " ~ key }}="{{ value }}"
  {%- endfor %}
  daemon --pidfile ${PID_FILE} {{ connect_path }}/connect-distributed -daemon {{ connect_config_file }} >> {{ connect.distributed.environment.LOG_DIR }}/connect.log 2>&1
  sleep 3
  ${JCMD} | grep 'org.apache.kafka.connect.cli.ConnectDistributed {{  connect_config_file }}' | /usr/bin/cut -d " " -f 1 > ${PID_FILE}
}

stop() {
  if [[ -s "${PID_FILE}" ]]; then
    if [ -x `which logger` ]; then
      logger -s -t {{ connect_service_name }} 'stopping service...' &>> {{ connect.distributed.environment.LOG_DIR }}/connect.log
    fi
    killproc -p ${PID_FILE}
    sleep 3
  fi
}

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  status)
    status -p ${PID_FILE} java
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo $"Usage: $0 {start|stop|restart|status}"
    exit 1
esac

exit $?
